import { Component, Input, ViewChildren, QueryList } from '@angular/core';

@Component({
	selector: 'tree-item',
	templateUrl: './tree-item.component.html',
	styleUrls: ['./tree-item.component.css']
})

export class TreeItemComponent{
	@Input('title') title;
	@Input('children') children;
	@Input('level') level;
	@Input('visible') visible;
	@Input('collapsed') collapsed;
	@ViewChildren('tree') childComponents: QueryList<TreeItemComponent>;
	levels = [];

	ngOnInit() {
		if(!this.level) { this.level = 0 }
		this.levels = Array(this.level).fill(0);
	}

	ngAfterViewInit(): void {
    	this.childComponents.changes.subscribe(() => console.log(this.childComponents));
    	console.log(this.childComponents)
	}

	childrenKeys = () => {
		if(this.children)
			return Object.keys(this.children)
		else
			return [];
	};

	toggleVisible = () => {
		this.visible = !this.visible;
	}

	toggleCollapsed = () => {
		console.log('toggle collapsed')
		this.collapsed = !this.collapsed;
	}
}

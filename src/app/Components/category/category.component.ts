import { Component, Input, ViewChildren, QueryList } from '@angular/core';
import { MalwareComponent } from '../malware/malware.component';

@Component({
	selector: 'category',
	templateUrl: './category.component.html',
	styleUrls: ['./category.component.css']
})

export class CategoryComponent {
	@Input('title') title;
	@Input('malware') malware;
	@Input('visible') visible;
	@Input('collapsed') collapsed;
	@ViewChildren('mal') childComponents: QueryList<MalwareComponent>;


	ngAfterViewInit(): void {
		// this.childComponents.changes.subscribe(() => console.log(this.childComponents));
		// console.log(this.malware)
		// console.log(this.malwareKeys())
		// console.log(this.malware[this.malwareKeys()[0]])
	}

	malwareKeys = () => {
		if(this.malware)
			return Object.keys(this.malware)
		else
			return [];
	};

	toggleCollapsed = () => {
		console.log('toggle collapsed')
		this.collapsed = !this.collapsed;
	}

	// TODO: rewrite this to work without viewchildren
	updateChildren() {
		this.childComponents.forEach((child) => {
			child.item.visible = this.visible;
		})
	}
}